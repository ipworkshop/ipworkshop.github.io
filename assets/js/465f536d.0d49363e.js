"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[6954],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}},70488:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"desktop_applications/Slint/Properties","title":"Properties in Slint","description":"Introduction","source":"@site/docs/desktop_applications/03_Slint/04_Properties.md","sourceDirName":"desktop_applications/03_Slint","slug":"/desktop_applications/Slint/Properties","permalink":"/docs/desktop_applications/Slint/Properties","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/desktop_applications/03_Slint/04_Properties.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"The .slint File","permalink":"/docs/desktop_applications/Slint/Slint-file"},"next":{"title":"Expressions in Slint","permalink":"/docs/desktop_applications/Slint/Expressions"}}');var r=i(74848),s=i(28453);const l={},o="Properties in Slint",a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Declaring Custom Properties",id:"declaring-custom-properties",level:2},{value:"Property Qualifiers",id:"property-qualifiers",level:2},{value:"Change Callbacks",id:"change-callbacks",level:2},{value:"Notes on Change Callbacks:",id:"notes-on-change-callbacks",level:3},{value:"Warning: Avoid Loops in Change Callbacks",id:"warning-avoid-loops-in-change-callbacks",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"properties-in-slint",children:"Properties in Slint"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["All elements in Slint have ",(0,r.jsx)(n.strong,{children:"properties"}),". Built-in elements come with standard properties such as ",(0,r.jsx)(n.code,{children:"color"})," or dimensional properties like ",(0,r.jsx)(n.code,{children:"width"})," and ",(0,r.jsx)(n.code,{children:"height"}),".",(0,r.jsx)(n.br,{}),"\n","You can assign values directly or use expressions."]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"export component Example inherits Window {\n    // Simple expression (ends with semicolon)\n    width: 42px;\n    // Code block (no semicolon)\n    height: { 42px }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"default value"})," of a property is the default value of its type:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bool"})," \u2192 ",(0,r.jsx)(n.code,{children:"false"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"int"})," \u2192 ",(0,r.jsx)(n.code,{children:"0"})]}),"\n",(0,r.jsx)(n.li,{children:"etc."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"declaring-custom-properties",children:"Declaring Custom Properties"}),"\n",(0,r.jsx)(n.p,{children:"You can define extra properties by specifying the type, name, and optional default value:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"export component Example {\n    // Integer property named my-property\n    property<int> my-property;\n\n    // Integer property with a default value\n    property<int> my-second-property: 42;\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"property-qualifiers",children:"Property Qualifiers"}),"\n",(0,r.jsx)(n.p,{children:"You can annotate properties with qualifiers that control how they can be accessed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"private"})," ",(0,r.jsx)(n.em,{children:"(default)"}),": Accessible only within the component."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"in"}),": Input property \u2014 can be set by the user of the component, but not overwritten internally."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"out"}),": Output property \u2014 can only be set by the component, read-only for the user."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"in-out"}),": Readable and writable by both the component and the user."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"export component Button {\n    in property <string> text;     // Set by the user\n    out property <bool> pressed;   // Read by the user\n    in-out property <bool> checked; // Changed by both\n    private property <bool> has-mouse; // Internal only\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Properties declared at the top level that aren\u2019t private are accessible externally when using the component as an element, or from business logic via language bindings."}),"\n",(0,r.jsx)(n.h2,{id:"change-callbacks",children:"Change Callbacks"}),"\n",(0,r.jsx)(n.p,{children:"You can define a callback that is triggered when a property changes value."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:'import { LineEdit } from "std-widgets.slint";\nexport component Example inherits Window {\n    VerticalLayout {\n        LineEdit {\n            // Triggered when text changes\n            changed text => { t.text = self.text; }\n        }\n        t := Text {}\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"notes-on-change-callbacks",children:"Notes on Change Callbacks:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["They are ",(0,r.jsx)(n.strong,{children:"not invoked immediately"})," \u2014 instead, they are queued and executed in the next event loop iteration."]}),"\n",(0,r.jsxs)(n.li,{children:["Invoked ",(0,r.jsx)(n.strong,{children:"only if"})," the property\u2019s value actually changes."]}),"\n",(0,r.jsx)(n.li,{children:"If multiple changes occur in one event loop cycle, the callback runs only once."}),"\n",(0,r.jsx)(n.li,{children:"If the value reverts before execution, the callback won\u2019t be called."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"warning-avoid-loops-in-change-callbacks",children:"Warning: Avoid Loops in Change Callbacks"}),"\n",(0,r.jsx)(n.p,{children:"Creating a callback loop can cause undefined behavior."}),"\n",(0,r.jsx)(n.p,{children:"Example of a potential loop:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"export component Example {\n    in-out property <int> foo;\n    property <int> bar: foo + 1;\n    changed bar => { foo += 1; } // Potential infinite loop\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Slint will break such loops after a few iterations, which can prevent other callbacks from running."}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prefer declarative bindings"})," over change callbacks when possible."]}),"\n",(0,r.jsx)(n.li,{children:"Avoid:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"changed bar => { foo = bar + 1; }\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Instead, use:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-slint",children:"foo: bar + 1;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Declarative bindings:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatically track dependencies."}),"\n",(0,r.jsx)(n.li,{children:"Are lazily evaluated."}),"\n",(0,r.jsx)(n.li,{children:"Maintain binding purity."}),"\n",(0,r.jsx)(n.li,{children:"Are easier to work with in graphical editors."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Excessive use of ",(0,r.jsx)(n.code,{children:"changed"})," callbacks can lead to bugs, complexity, and performance issues."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);