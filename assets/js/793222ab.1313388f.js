"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[7221],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(96540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}},93355:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"desktop_applications/Rust/Module-organization","title":"Module Organization","description":"Organizing Code with Modules","source":"@site/docs/desktop_applications/02_Rust/12_Module-organization.md","sourceDirName":"desktop_applications/02_Rust","slug":"/desktop_applications/Rust/Module-organization","permalink":"/docs/desktop_applications/Rust/Module-organization","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/desktop_applications/02_Rust/12_Module-organization.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Module Organization"},"sidebar":"tutorialSidebar","previous":{"title":"Impl and Methods","permalink":"/docs/desktop_applications/Rust/Impl-and-methods"},"next":{"title":"Exercises","permalink":"/docs/desktop_applications/Rust/Exercises"}}');var r=s(74848),o=s(28453);const l={title:"Module Organization"},t=void 0,d={},c=[{value:"Organizing Code with Modules",id:"organizing-code-with-modules",level:3},{value:"<strong>Example: Single File Module</strong>",id:"example-single-file-module",level:4},{value:"<strong>Example: Modules in Separate Files</strong>",id:"example-modules-in-separate-files",level:4}];function a(e){const n={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"organizing-code-with-modules",children:"Organizing Code with Modules"}),"\n",(0,r.jsx)(n.p,{children:"As your Rust projects grow, you'll want to organize your code into logical units. Rust's module system helps you do this."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Modules (",(0,r.jsx)(n.code,{children:"mod"}),"):"]})," Modules are like namespaces or containers for functions, structs, enums, and other modules. They help prevent naming conflicts and control visibility."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"use"})," Keyword:"]})," The ",(0,r.jsx)(n.code,{children:"use"})," keyword brings items from modules into your current scope, so you don't have to type the full path every time."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"pub"})," Keyword:"]})," By default, everything in Rust is private. To make an item (function, struct, enum, module) visible outside its current module, you need to mark it with ",(0,r.jsx)(n.code,{children:"pub"})," (public)."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-single-file-module",children:(0,r.jsx)(n.strong,{children:"Example: Single File Module"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"// src/main.rs\n\n// Declare a module named 'greetings'\nmod greetings {\n    // This function is private by default\n    fn english() {\n        println!(\"Hello!\");\n    }\n\n    // This function is public, so it can be accessed from outside 'greetings'\n    pub fn spanish() {\n        println!(\"\xa1Hola!\");\n    }\n\n    // Declare a nested module\n    pub mod formal {\n        pub fn english_formal() {\n            println!(\"Good day!\");\n        }\n    }\n}\n\nfn main() {\n    // Call a public function from the greetings module\n    greetings::spanish();\n\n    // Call a public function from the nested formal module\n    greetings::formal::english_formal();\n\n    // greetings::english(); // ERROR! 'english' is private\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"example-modules-in-separate-files",children:(0,r.jsx)(n.strong,{children:"Example: Modules in Separate Files"})}),"\n",(0,r.jsx)(n.p,{children:"For larger projects, you'll put modules in separate files."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Create a new Cargo project:"})," ",(0,r.jsx)(n.code,{children:"cargo new my_app_modules"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create module files:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Inside ",(0,r.jsx)(n.code,{children:"src/"}),", create a file named ",(0,r.jsx)(n.code,{children:"greetings.rs"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Inside ",(0,r.jsx)(n.code,{children:"src/greetings/"}),", create a file named ",(0,r.jsx)(n.code,{children:"formal.rs"}),". (You'll need to create the ",(0,r.jsx)(n.code,{children:"greetings"})," folder first)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Content of ",(0,r.jsx)(n.code,{children:"src/greetings.rs"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"// src/greetings.rs\npub fn spanish() {\n    println!(\"\xa1Hola desde el m\xf3dulo de saludos!\");\n}\n\n// Declare the nested module 'formal'\npub mod formal;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Content of ",(0,r.jsx)(n.code,{children:"src/greetings/formal.rs"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'// src/greetings/formal.rs\npub fn english_formal() {\n    println!("Good day from the formal submodule!");\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Content of ",(0,r.jsx)(n.code,{children:"src/main.rs"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"// src/main.rs\n\nmod greetings; // Declare the 'greetings' module (Rust looks for src/greetings.rs or src/greetings/mod.rs)\n\n// Bring specific items into scope using 'use' for easier access\nuse greetings::spanish;\nuse greetings::formal::english_formal;\n\nfn main() {\n    spanish(); // Now you can call it directly\n    english_formal(); // And this one too\n\n    // You can still use the full path if you prefer\n    greetings::spanish();\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"mod"})," declaration:"]})," When you write ",(0,r.jsx)(n.code,{children:"mod greetings;"})," in ",(0,r.jsx)(n.code,{children:"main.rs"}),", Rust looks for ",(0,r.jsx)(n.code,{children:"src/greetings.rs"})," or ",(0,r.jsx)(n.code,{children:"src/greetings/mod.rs"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"pub"})," for Visibility:"]})," Remember to use ",(0,r.jsx)(n.code,{children:"pub"})," on items you want to expose from a module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"use"})," for Convenience:"]})," ",(0,r.jsx)(n.code,{children:"use"})," statements are like shortcuts; they don't change visibility but make names easier to type."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);