"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[2506],{8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},c=i.createContext(r);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(c.Provider,{value:n},e.children)}},8700:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"cloud_operations/kubernetes/resources/services","title":"Services","description":"","source":"@site/docs/cloud_operations/kubernetes/resources/services.md","sourceDirName":"cloud_operations/kubernetes/resources","slug":"/cloud_operations/kubernetes/resources/services","permalink":"/docs/cloud_operations/kubernetes/resources/services","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/cloud_operations/kubernetes/resources/services.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Services","description":"","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Services","permalink":"/docs/category/services"},"next":{"title":"Ingress","permalink":"/docs/cloud_operations/kubernetes/resources/ingress"}}');var r=s(4848),c=s(8453);const t={title:"Services",description:"",sidebar_position:4},l="Services",o={},a=[{value:"Goals",id:"goals",level:2},{value:"Understanding Kubernetes Services",id:"understanding-kubernetes-services",level:2},{value:"Basic Service Example",id:"basic-service-example",level:2},{value:"1. ClusterIP Service",id:"1-clusterip-service",level:3},{value:"NodePort Service",id:"nodeport-service",level:3},{value:"Service Spec Explanation",id:"service-spec-explanation",level:2},{value:"Service Types",id:"service-types",level:2},{value:"Exercises",id:"exercises",level:2},{value:"Exercise 1: Expose an Application Internally Using a ClusterIP Service",id:"exercise-1-expose-an-application-internally-using-a-clusterip-service",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"services",children:(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/service/",children:"Services"})})}),"\n",(0,r.jsx)(n.h2,{id:"goals",children:"Goals"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Understand Kubernetes Services"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Learn what a Service is and its role in the Kubernetes architecture."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Basic Example(s)"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provide (a) basic example(s) of Services."}),"\n",(0,r.jsx)(n.li,{children:"Show how to define a Service using YAML."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Spec Explanation"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Explain the components of the Service specification using the example(s) above."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Types"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Describe different types of Services and their use cases (ClusterIP, NodePort, LoadBalancer, ExternalName)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exercise"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hands-on activity to create a simple Service."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"understanding-kubernetes-services",children:"Understanding Kubernetes Services"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"Service"})," in Kubernetes is an abstraction that defines a logical set of pods and a policy by which to access them. Services enable networking and connectivity between different parts of a Kubernetes application or with external services."]}),"\n",(0,r.jsx)(n.h2,{id:"basic-service-example",children:"Basic Service Example"}),"\n",(0,r.jsx)(n.h3,{id:"1-clusterip-service",children:"1. ClusterIP Service"}),"\n",(0,r.jsx)(n.p,{children:"Here is a basic example of a Kubernetes Service specification in YAML:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: ClusterIP\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This Service provides a stable IP and DNS name to access the set of ",(0,r.jsx)(n.code,{children:"nginx"})," pods."]}),"\n",(0,r.jsxs)(n.p,{children:["Save this to a file ",(0,r.jsx)(n.code,{children:"service.yaml"})," and create the resource using ",(0,r.jsx)(n.code,{children:"kubectl apply -f service.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> kubectl apply -f service.yaml\nservice/nginx-service created\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nodeport-service",children:"NodePort Service"}),"\n",(0,r.jsxs)(n.p,{children:["First we create the server Pod ",(0,r.jsx)(n.code,{children:"service-simple-pod.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\n  labels:\n    app: nginx\nspec:\n  containers:\n  - name: nginx-container\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We then create the corresponding service for the pod ",(0,r.jsx)(n.code,{children:"service-simple.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-nodeport\nspec:\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n    nodePort: 30001\n  type: NodePort\n"})}),"\n",(0,r.jsx)(n.p,{children:"We proceed to create both:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> kubectl apply -f service-simple-pod.yaml \n> kubectl apply -f service-simple.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"We then find the Node's IP:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"> minikube ip\n"})}),"\n",(0,r.jsx)(n.p,{children:"And then we try to curl from the terminal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'> curl http://$(minikube ip):30001\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\nhtml { color-scheme: light dark; }\nbody { width: 35em; margin: 0 auto;\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href="http://nginx.org/">nginx.org</a>.<br/>\nCommercial support is available at\n<a href="http://nginx.com/">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"service-spec-explanation",children:"Service Spec Explanation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"apiVersion: v1 (hardcoded)"}),"\n",(0,r.jsx)(n.li,{children:"kind: Service (type of the resource)"}),"\n",(0,r.jsxs)(n.li,{children:["metadata: ",(0,r.jsx)(n.a,{href:"/docs/cloud_operations/kubernetes/resources/object-meta",children:"ObjectMeta"})]}),"\n",(0,r.jsxs)(n.li,{children:["spec: ",(0,r.jsx)(n.a,{href:"/docs/cloud_operations/kubernetes/resources/service/service-spec",children:"ServiceSpec"})]}),"\n",(0,r.jsxs)(n.li,{children:["status: ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#loadbalancerstatus-v1-core",children:"ServiceStatus"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"service-types",children:"Service Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ClusterIP"}),": Exposes the Service on a cluster-internal IP. This is the default type."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NodePort"}),": Exposes the Service on each Node's IP at a static port. (We'll be using this for examples)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LoadBalancer"}),": Exposes the Service externally using a cloud provider's load balancer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ExternalName"}),": Maps a Service to an external DNS name."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"exercises",children:"Exercises"}),"\n",(0,r.jsx)(n.h3,{id:"exercise-1-expose-an-application-internally-using-a-clusterip-service",children:"Exercise 1: Expose an Application Internally Using a ClusterIP Service"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Objective"}),": Deploy an application and expose it within the cluster using a ClusterIP Service."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Task"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Deploy a pod running a simple HTTP server (e.g., ",(0,r.jsx)(n.code,{children:"nginx"})," or ",(0,r.jsx)(n.code,{children:"httpd"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"Create a ClusterIP Service to expose this HTTP server within the Kubernetes cluster."}),"\n",(0,r.jsx)(n.li,{children:"Verify that the service is accessible from other pods in the cluster."}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can deploy a Pod running a simple linux image (",(0,r.jsx)(n.code,{children:"ubuntu:22.04"}),"). Shelling into it was shown previously on the ",(0,r.jsx)(n.a,{href:"/docs/cloud_operations/kubernetes/resources/pods",children:(0,r.jsx)(n.code,{children:"Pods"})})," page, do you remember how to do it without looking at it?"]})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);