"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[429],{28453:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>r});var l=i(96540);const s={},t=l.createContext(s);function c(n){const e=l.useContext(t);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),l.createElement(t.Provider,{value:e},n.children)}},55165:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"desktop_applications/Slint/Callbacks","title":"Functions and Callbacks in Slint","description":"Introduction","source":"@site/docs/desktop_applications/03_Slint/09_Callbacks.md","sourceDirName":"desktop_applications/03_Slint","slug":"/desktop_applications/Slint/Callbacks","permalink":"/docs/desktop_applications/Slint/Callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/desktop_applications/03_Slint/09_Callbacks.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Repetition in Slint","permalink":"/docs/desktop_applications/Slint/Repetition"},"next":{"title":"Structs and Enums in Slint","permalink":"/docs/desktop_applications/Slint/Structs-and-Enums"}}');var s=i(74848),t=i(28453);const c={},r="Functions and Callbacks in Slint",a={},o=[{value:"Introduction",id:"introduction",level:2},{value:"Declaring Functions",id:"declaring-functions",level:2},{value:"Calling Functions",id:"calling-functions",level:2},{value:"Function Visibility",id:"function-visibility",level:2},{value:"Functions vs Callbacks",id:"functions-vs-callbacks",level:2},{value:"Declaring Callbacks",id:"declaring-callbacks",level:2},{value:"With Parameters:",id:"with-parameters",level:3},{value:"With Return Value:",id:"with-return-value",level:3},{value:"With Named Arguments:",id:"with-named-arguments",level:3},{value:"Callback Aliases",id:"callback-aliases",level:2}];function d(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"functions-and-callbacks-in-slint",children:"Functions and Callbacks in Slint"})}),"\n",(0,s.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(e.p,{children:["Functions in Slint allow you to ",(0,s.jsx)(e.strong,{children:"name, organize, and reuse"})," pieces of logic.",(0,s.jsx)(e.br,{}),"\n","They can be defined inside ",(0,s.jsx)(e.strong,{children:"components"})," or ",(0,s.jsx)(e.strong,{children:"elements within components"})," \u2014 but not globally, inside structs/enums, or nested within other functions."]}),"\n",(0,s.jsx)(e.h2,{id:"declaring-functions",children:"Declaring Functions"}),"\n",(0,s.jsxs)(e.p,{children:["Functions are declared with the ",(0,s.jsx)(e.code,{children:"function"})," keyword:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:'export component Example {\n    function my-function(parameter: int) -> string {\n        return "result";\n    }\n}\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Parameters"}),": ",(0,s.jsx)(e.code,{children:"(name: type)"})," format, passed by value."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Return type"}),": after ",(0,s.jsx)(e.code,{children:"->"}),"."]}),"\n",(0,s.jsxs)(e.li,{children:["If no explicit ",(0,s.jsx)(e.code,{children:"return"}),", the last statement's value is returned."]}),"\n",(0,s.jsxs)(e.li,{children:["Use ",(0,s.jsx)(e.code,{children:"pure"})," for side-effect-free functions."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"calling-functions",children:"Calling Functions"}),"\n",(0,s.jsx)(e.p,{children:"Functions can be called:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Without an element name (like a normal function call)."}),"\n",(0,s.jsx)(e.li,{children:"With an element name (like a method)."}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:'import { Button } from "std-widgets.slint";\n\nexport component Example {\n    property <string> my-property: my-function();\n    property <int> my-other-property: my_button.my-other-function();\n\n    pure function my-function() -> string {\n        return "result";\n    }\n\n    Text {\n        text: root.my-function();\n    }\n\n    my_button := Button {\n        pure function my-other-function() -> int {\n            return 42;\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"function-visibility",children:"Function Visibility"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"private"})," (default): accessible only within the component."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"public"}),": accessible from other components via a target (child instance)."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"protected"}),": accessible only by components that inherit from it."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Example:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"export component HasFunction {\n    public pure function double(x: int) -> int {\n        return x * 2;\n    }\n}\n\nexport component CallsFunction {\n    property <int> test: my-friend.double(1);\n    my-friend := HasFunction {}\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Functions in ",(0,s.jsx)(e.strong,{children:"child elements"})," are not accessible externally, even if ",(0,s.jsx)(e.code,{children:"public"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["Public functions in ",(0,s.jsx)(e.strong,{children:"exported components"})," can also be called from ",(0,s.jsx)(e.strong,{children:"backend code"})," (Rust, C++, JS)."]}),"\n",(0,s.jsx)(e.h2,{id:"functions-vs-callbacks",children:"Functions vs Callbacks"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Similarities"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Callable blocks of code."}),"\n",(0,s.jsx)(e.li,{children:"Have parameters and return values."}),"\n",(0,s.jsxs)(e.li,{children:["Can be ",(0,s.jsx)(e.code,{children:"pure"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Differences"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Callbacks"})," can be implemented from backend code."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Functions"})," must be fully implemented in Slint."]}),"\n",(0,s.jsxs)(e.li,{children:["Callback syntax differs and supports aliases with ",(0,s.jsx)(e.code,{children:"<=>"}),"."]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"declaring-callbacks",children:"Declaring Callbacks"}),"\n",(0,s.jsxs)(e.p,{children:["Callbacks are declared with the ",(0,s.jsx)(e.code,{children:"callback"})," keyword."]}),"\n",(0,s.jsx)(e.p,{children:"Example:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"export component Example inherits Rectangle {\n    callback hello;\n\n    area := TouchArea {\n        clicked => {\n            root.hello()\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"with-parameters",children:"With Parameters:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"callback hello(int, string);\nhello(aa, bb) => { /* handler code */ }\n"})}),"\n",(0,s.jsx)(e.h3,{id:"with-return-value",children:"With Return Value:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"callback hello(int, int) -> int;\nhello(aa, bb) => { aa + bb }\n"})}),"\n",(0,s.jsx)(e.h3,{id:"with-named-arguments",children:"With Named Arguments:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"callback hello(foo: int, bar: string);\nhello(aa, bb) => { /* code */ }\n"})}),"\n",(0,s.jsx)(e.h2,{id:"callback-aliases",children:"Callback Aliases"}),"\n",(0,s.jsxs)(e.p,{children:["You can alias callbacks using ",(0,s.jsx)(e.code,{children:"<=>"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-slint",children:"callback clicked <=> area.clicked;\narea := TouchArea {}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);