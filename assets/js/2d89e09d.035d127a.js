"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[3472],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}},43301:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"iot/lesson1","title":"Basics - Pins, Timers, ADC, PWM","description":"-----------------","source":"@site/docs/iot/lesson1.md","sourceDirName":"iot","slug":"/iot/lesson1","permalink":"/docs/iot/lesson1","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/iot/lesson1.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Basics - Pins, Timers, ADC, PWM","slug":"lesson1","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Setup","permalink":"/docs/iot/setup"},"next":{"title":"Audio-Video","permalink":"/docs/iot/lesson2"}}');var s=i(74848),l=i(28453);const t={title:"Basics - Pins, Timers, ADC, PWM",slug:"lesson1",sidebar_position:2},o=void 0,d={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Parts you&#39;ll use",id:"parts-youll-use",level:3},{value:"Pin cheat sheet",id:"pin-cheat-sheet",level:2},{value:"1) Toggling pins (LED)",id:"1-toggling-pins-led",level:2},{value:"Wiring",id:"wiring",level:3},{value:"Code: Blink external LED",id:"code-blink-external-led",level:3},{value:"How it works",id:"how-it-works",level:4},{value:"Exercises",id:"exercises",level:3},{value:"2) Reading digital pins",id:"2-reading-digital-pins",level:2},{value:"Wiring (pull-down example)",id:"wiring-pull-down-example",level:3},{value:"Code: Button with internal pull-down",id:"code-button-with-internal-pull-down",level:3},{value:"Exercises",id:"exercises-1",level:3},{value:"3) Timers",id:"3-timers",level:2},{value:"Wiring (pull-down example)",id:"wiring-pull-down-example-1",level:3},{value:"Code: Button with internal pull-down",id:"code-button-with-internal-pull-down-1",level:3},{value:"Exercises",id:"exercises-2",level:3},{value:"4) Reading ADC (potentiometer)",id:"4-reading-adc-potentiometer",level:2},{value:"Wiring",id:"wiring-1",level:3},{value:"Code: Read ADC and print both raw and scaled values",id:"code-read-adc-and-print-both-raw-and-scaled-values",level:3},{value:"Exercise: Disco!",id:"exercise-disco",level:3},{value:"5) PWM (fade an LED)",id:"5-pwm-fade-an-led",level:2},{value:"Wiring",id:"wiring-2",level:3},{value:"Code: Fade up and down with PWM",id:"code-fade-up-and-down-with-pwm",level:3},{value:"Mapping potentiometer -&gt; brightness",id:"mapping-potentiometer---brightness",level:4},{value:"Exercises",id:"exercises-3",level:3},{value:"Putting it all together (mini-project)",id:"putting-it-all-together-mini-project",level:2},{value:"Troubleshooting checklist",id:"troubleshooting-checklist",level:2},{value:"Challenge ideas",id:"challenge-ideas",level:2},{value:"Reference snippets",id:"reference-snippets",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Raspberry Pi ",(0,s.jsx)(n.strong,{children:"Pico or Pico W"})]}),"\n",(0,s.jsx)(n.li,{children:"Micro USB cable"}),"\n",(0,s.jsx)(n.li,{children:"A MicroPython-capable editor"}),"\n",(0,s.jsx)(n.li,{children:"MicroPython firmware flashed on the board"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"parts-youll-use",children:"Parts you'll use"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["1 x ",(0,s.jsx)(n.strong,{children:"push button"})]}),"\n",(0,s.jsxs)(n.li,{children:["1 x ",(0,s.jsx)(n.strong,{children:"potentiometer"})]}),"\n",(0,s.jsxs)(n.li,{children:["1 x ",(0,s.jsx)(n.strong,{children:"LED"})]}),"\n",(0,s.jsx)(n.li,{children:"1 x resistor (for the LED)"}),"\n",(0,s.jsx)(n.li,{children:"Breadboard + jumper wires"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Safety"}),": Never connect anything to the Pico's ",(0,s.jsx)(n.strong,{children:"VBUS"})," or ",(0,s.jsx)(n.strong,{children:"3V3"})," incorrectly. Use the ",(0,s.jsx)(n.strong,{children:"3V3"})," pin for sensors and ",(0,s.jsx)(n.strong,{children:"GND"})," for ground. Protect LEDs with a resistor."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"pin-cheat-sheet",children:"Pin cheat sheet"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Digital GPIO"}),": GP0-GP28"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ADC inputs"}),": GP26 (",(0,s.jsx)(n.strong,{children:"ADC0"}),"), GP27 (",(0,s.jsx)(n.strong,{children:"ADC1"}),"), GP28 (",(0,s.jsx)(n.strong,{children:"ADC2"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Onboard LED"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pico W"}),": ",(0,s.jsx)(n.code,{children:'Pin("LED")'})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pico"}),": ",(0,s.jsx)(n.code,{children:"Pin(25)"})," (GP25)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PWM"}),": almost any GPIO supports PWM via ",(0,s.jsx)(n.code,{children:"PWM(Pin(n))"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"pinout",src:i(80189).A+"",width:"842",height:"595"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-toggling-pins-led",children:"1) Toggling pins (LED)"}),"\n",(0,s.jsx)(n.p,{children:"We'll blink an external LED."}),"\n",(0,s.jsx)(n.h3,{id:"wiring",children:"Wiring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["LED anode (long leg) -> ",(0,s.jsx)(n.strong,{children:"GP0"})," through the ",(0,s.jsx)(n.strong,{children:"resistor"})]}),"\n",(0,s.jsxs)(n.li,{children:["LED cathode (short leg) -> ",(0,s.jsx)(n.strong,{children:"GND"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-blink-external-led",children:"Code: Blink external LED"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from machine import Pin\r\nfrom time import sleep\r\n\r\nled = Pin(0, Pin.OUT)\r\n\r\nwhile True:\r\n    led.toggle()\r\n    sleep(0.5)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Pin(..., Pin.OUT)"})," sets the GPIO as an ",(0,s.jsx)(n.strong,{children:"output"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"toggle()"})," flips the pin state without tracking it yourself."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sleep(0.5)"})," waits 0.5 seconds."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"exercises",children:"Exercises"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Change the blink rate to 5 times per second."}),"\n",(0,s.jsx)(n.li,{children:'Make a pattern: short-short-long (like Morse "U").'}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-reading-digital-pins",children:"2) Reading digital pins"}),"\n",(0,s.jsx)(n.p,{children:"We'll read a push button and control an LED."}),"\n",(0,s.jsx)(n.h3,{id:"wiring-pull-down-example",children:"Wiring (pull-down example)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Button ",(0,s.jsx)(n.strong,{children:"one leg"})," -> ",(0,s.jsx)(n.strong,{children:"GP1"})]}),"\n",(0,s.jsxs)(n.li,{children:["Button ",(0,s.jsx)(n.strong,{children:"other leg"})," -> ",(0,s.jsx)(n.strong,{children:"3V3"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"10 kOhm"})," resistor from ",(0,s.jsx)(n.strong,{children:"GP14"})," -> ",(0,s.jsx)(n.strong,{children:"GND"})," (external pull-down)\r\n",(0,s.jsx)(n.em,{children:"Or use the Pico's internal pull-down to skip the resistor (see code)."})]}),"\n",(0,s.jsxs)(n.li,{children:["LED (optional): anode -> ",(0,s.jsx)(n.strong,{children:"GP0"})," through ",(0,s.jsx)(n.strong,{children:"resistor"}),", cathode -> ",(0,s.jsx)(n.strong,{children:"GND"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.strong,{children:"internal pull-up/pull-down"})," resistors to simplify wiring."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-button-with-internal-pull-down",children:"Code: Button with internal pull-down"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from machine import Pin\r\nfrom time import sleep\r\n\r\n# Input with internal pull-down means the pin reads 0 when unpressed\r\nbutton = Pin(1, Pin.IN, Pin.PULL_DOWN)\r\n\r\nled = Pin(0, Pin.OUT)\r\n\r\nwhile True:\r\n    if button.value():           # 1 when pressed\r\n        led.on()\r\n    else:\r\n        led.off()\r\n    sleep(0.01)                  # tiny delay helps CPU + debounce a bit\n"})}),"\n",(0,s.jsx)(n.h3,{id:"exercises-1",children:"Exercises"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Invert the logic (LED on when ",(0,s.jsx)(n.strong,{children:"not"})," pressed)."]}),"\n",(0,s.jsxs)(n.li,{children:["Add a ",(0,s.jsx)(n.strong,{children:"long-press"})," (>1s) action that blinks the LED rapidly."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-timers",children:"3) Timers"}),"\n",(0,s.jsx)(n.p,{children:"We'll toggle the led using a timer interrupt."}),"\n",(0,s.jsx)(n.h3,{id:"wiring-pull-down-example-1",children:"Wiring (pull-down example)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Button ",(0,s.jsx)(n.strong,{children:"one leg"})," -> ",(0,s.jsx)(n.strong,{children:"GP1"})]}),"\n",(0,s.jsxs)(n.li,{children:["Button ",(0,s.jsx)(n.strong,{children:"other leg"})," -> ",(0,s.jsx)(n.strong,{children:"3V3"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"10 kOhm"})," resistor from ",(0,s.jsx)(n.strong,{children:"GP14"})," -> ",(0,s.jsx)(n.strong,{children:"GND"})," (external pull-down)\r\n",(0,s.jsx)(n.em,{children:"Or use the Pico's internal pull-down to skip the resistor (see code)."})]}),"\n",(0,s.jsxs)(n.li,{children:["LED (optional): anode -> ",(0,s.jsx)(n.strong,{children:"GP0"})," through ",(0,s.jsx)(n.strong,{children:"resistor"}),", cathode -> ",(0,s.jsx)(n.strong,{children:"GND"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.strong,{children:"internal pull-up/pull-down"})," resistors to simplify wiring."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-button-with-internal-pull-down-1",children:"Code: Button with internal pull-down"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from machine import Pin, Timer\r\n\r\nled = Pin(0, Pin.OUT)\r\ntimer = Timer()\r\n\r\ndef blink(timer):\r\n    led.toggle()\r\n\r\ntimer.init(freq=2.5, mode=Timer.PERIODIC, callback=blink)\r\n\r\n# We need to stall for the program to keep running\r\nwhile True:\r\n    pass\n"})}),"\n",(0,s.jsx)(n.h3,{id:"exercises-2",children:"Exercises"}),"\n",(0,s.jsx)(n.p,{children:"When the button is pressed, change between two blinking frequencies."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-reading-adc-potentiometer",children:"4) Reading ADC (potentiometer)"}),"\n",(0,s.jsx)(n.p,{children:"We'll read an analog voltage (0-3.3 V) from a potentiometer using the Pico's ADC."}),"\n",(0,s.jsx)(n.h3,{id:"wiring-1",children:"Wiring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Potentiometer ",(0,s.jsx)(n.strong,{children:"middle wiper"})," -> ",(0,s.jsx)(n.strong,{children:"ADC0"})," (GP26)"]}),"\n",(0,s.jsxs)(n.li,{children:["Pot ",(0,s.jsx)(n.strong,{children:"one side"})," -> ",(0,s.jsx)(n.strong,{children:"3V3"})]}),"\n",(0,s.jsxs)(n.li,{children:["Pot ",(0,s.jsx)(n.strong,{children:"other side"})," -> ",(0,s.jsx)(n.strong,{children:"GND"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-read-adc-and-print-both-raw-and-scaled-values",children:"Code: Read ADC and print both raw and scaled values"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from machine import ADC, Pin\r\nfrom time import sleep\r\n\r\nadc = ADC(26)  # GP26 = ADC0\r\n\r\nwhile True:\r\n    raw = adc.read_u16()         # 0..65535\r\n    volts = (raw / 65535) * 3.3  # scale to 0..3.3V\r\n    print("raw:", raw, " volts:", round(volts, 3))\r\n    sleep(0.1)\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["The Pico's ",(0,s.jsx)(n.code,{children:"read_u16()"})," returns a 16-bit value (0-65535). The analog reference is ",(0,s.jsx)(n.strong,{children:"3.3 V"})," (board's 3V3 rail)."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"exercise-disco",children:"Exercise: Disco!"}),"\n",(0,s.jsx)(n.p,{children:"Change the frequency with which the led blinks based on the potentiometer."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-pwm-fade-an-led",children:"5) PWM (fade an LED)"}),"\n",(0,s.jsxs)(n.p,{children:["PWM lets you control ",(0,s.jsx)(n.strong,{children:"brightness"})," by switching the LED on and off very fast. The perceived brightness depends on the ",(0,s.jsx)(n.strong,{children:"duty cycle"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"wiring-2",children:"Wiring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["LED anode -> ",(0,s.jsx)(n.strong,{children:"GP0"})," through the ",(0,s.jsx)(n.strong,{children:"resistor"})]}),"\n",(0,s.jsxs)(n.li,{children:["LED cathode -> ",(0,s.jsx)(n.strong,{children:"GND"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"code-fade-up-and-down-with-pwm",children:"Code: Fade up and down with PWM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from machine import Pin, PWM\r\nfrom time import sleep\r\n\r\nled_pin = Pin(0, Pin.OUT)   # external LED on GP0\r\npwm = PWM(led_pin)\r\npwm.freq(1000)               # 1 kHz is a good default\r\n\r\n# Duty range is 0..65535\r\nwhile True:\r\n    # fade up\r\n    for duty in range(0, 65536, 1024):\r\n        pwm.duty_u16(duty)\r\n        sleep(0.01)\r\n    # fade down\r\n    for duty in range(65535, -1, -1024):\r\n        pwm.duty_u16(duty)\r\n        sleep(0.01)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"mapping-potentiometer---brightness",children:"Mapping potentiometer -> brightness"}),"\n",(0,s.jsx)(n.p,{children:"Combine ADC + PWM: twist the pot to change LED brightness."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from machine import ADC, Pin, PWM\r\nfrom time import sleep\r\n\r\nadc = ADC(26)               # potentiometer on GP26 (ADC0)\r\npwm = PWM(Pin(0))           # LED on GP0\r\npwm.freq(1000)\r\n\r\nwhile True:\r\n    duty = adc.read_u16()   # already 0..65535, perfect for duty\r\n    pwm.duty_u16(duty)\r\n    sleep(0.01)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"exercises-3",children:"Exercises"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Try different PWM ",(0,s.jsx)(n.strong,{children:"frequencies"})," (10 Hz, 120 Hz, 500 Hz). Do you notice flicker?"]}),"\n",(0,s.jsxs)(n.li,{children:["Add a ",(0,s.jsx)(n.strong,{children:"gamma curve"})," so brightness appears more linear to your eyes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"duty = int((value/65535) ** 2.2 * 65535)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use the button as an ",(0,s.jsx)(n.strong,{children:"on/off"})," for the PWM brightness from the pot."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"putting-it-all-together-mini-project",children:"Putting it all together (mini-project)"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.strong,{children:"touch lamp"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Button"})," toggles the lamp (PWM LED) on/off."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Potentiometer"})," sets brightness when the lamp is on."]}),"\n",(0,s.jsxs)(n.li,{children:["Long-press the button (>1s) to enter a ",(0,s.jsx)(n.strong,{children:"breathing"})," mode (automatic fade)."]}),"\n",(0,s.jsx)(n.li,{children:"Short press exits breathing mode back to manual brightness."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Track a ",(0,s.jsx)(n.code,{children:"mode"})," variable (",(0,s.jsx)(n.code,{children:'"off"'}),", ",(0,s.jsx)(n.code,{children:'"manual"'}),", ",(0,s.jsx)(n.code,{children:'"breathing"'}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Use a debounced button with long-press detection."}),"\n",(0,s.jsx)(n.li,{children:"In breathing mode, run the fade loop; in manual, map ADC -> duty."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting-checklist",children:"Troubleshooting checklist"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["LED never lights?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check ",(0,s.jsx)(n.strong,{children:"polarity"})," (long leg to resistor/GPIO)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Button always reads 1 or 0?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ensure you enabled the ",(0,s.jsx)(n.strong,{children:"correct pull"})," (",(0,s.jsx)(n.code,{children:"PULL_UP"})," or ",(0,s.jsx)(n.code,{children:"PULL_DOWN"}),") and wired to ",(0,s.jsx)(n.strong,{children:"GND"}),"/",(0,s.jsx)(n.strong,{children:"3V3"})," accordingly."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["ADC readings jumpy?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use a ",(0,s.jsx)(n.strong,{children:"moving average"}),", keep wires short, share a solid ",(0,s.jsx)(n.strong,{children:"GND"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["PWM looks weird?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Lower or raise ",(0,s.jsx)(n.code,{children:"pwm.freq()"})," to avoid visible flicker or buzzing."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"challenge-ideas",children:"Challenge ideas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Implement ",(0,s.jsx)(n.strong,{children:"software PWM"})," on a pin without hardware PWM (for learning)."]}),"\n",(0,s.jsxs)(n.li,{children:["Add a ",(0,s.jsx)(n.strong,{children:"status LED"})," that blinks out the current mode (1 blink = off, 2 = manual, 3 = breathing)."]}),"\n",(0,s.jsxs)(n.li,{children:["Log ADC values over USB serial and ",(0,s.jsx)(n.strong,{children:"plot"})," them on your computer."]}),"\n",(0,s.jsx)(n.li,{children:"Implement a semaphore using an RGB LED. Use a button."}),"\n",(0,s.jsx)(n.li,{children:'Build a "Christmas tree" lighting system using an RGB LED. It should change the sequence when the button is pressed.'}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"reference-snippets",children:"Reference snippets"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Internal pull-ups"})," example (wire button to ",(0,s.jsx)(n.strong,{children:"GND"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"button = Pin(1, Pin.IN, Pin.PULL_UP)  # reads 1 idle, 0 when pressed\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Button interrupt (edge-triggered) to toggle an LED:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from machine import Pin\r\nfrom time import sleep\r\n\r\nled = Pin(0, Pin.OUT)  # or Pin("LED")\r\nstate = 0\r\n\r\ndef on_press(pin):\r\n    global state\r\n    state ^= 1\r\n    led.value(state)\r\n\r\nbutton = Pin(1, Pin.IN, Pin.PULL_DOWN)\r\nbutton.irq(trigger=Pin.IRQ_RISING, handler=on_press)\r\n\r\nwhile True:\r\n    sleep(1)  # main loop can do other work\n'})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},80189:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/picow-pinout-53d738f9b62492655771d028c1a11829.svg"}}]);