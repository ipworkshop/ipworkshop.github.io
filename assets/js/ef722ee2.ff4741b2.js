"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[4731],{6674:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"cloud_operations/docker/docker-compose","title":"Docker Compose","description":"Working with Docker compose","source":"@site/docs/cloud_operations/docker/docker-compose.md","sourceDirName":"cloud_operations/docker","slug":"/docker/compose","permalink":"/docs/docker/compose","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/cloud_operations/docker/docker-compose.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"docker-compose","title":"Docker Compose","description":"Working with Docker compose","slug":"/docker/compose","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Docker Basics","permalink":"/docs/docker/basics"},"next":{"title":"Kubernetes","permalink":"/docs/category/kubernetes"}}');var r=s(4848),t=s(8453);const i={id:"docker-compose",title:"Docker Compose",description:"Working with Docker compose",slug:"/docker/compose",sidebar_position:3},c=void 0,a={},l=[{value:"Why Docker Compose?",id:"why-docker-compose",level:2},{value:"Installation",id:"installation",level:2},{value:"YAML file format",id:"yaml-file-format",level:2},{value:"Docker Compose example file",id:"docker-compose-example-file",level:2},{value:"Volumes",id:"volumes",level:3},{value:"Networks",id:"networks",level:3},{value:"Secrets",id:"secrets",level:3},{value:"List of Docker Compose commands",id:"list-of-docker-compose-commands",level:2},{value:"Exercise (final boss)",id:"exercise-final-boss",level:2}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h2,{id:"why-docker-compose",children:"Why Docker Compose?"}),"\n",(0,r.jsxs)(o.p,{children:["As we have previously seen in the ",(0,r.jsx)(o.a,{href:"/docs/docker/basics",children:"Docker Basics"})," tutorial, we can create and\nrun containers from the CLI. But this method gets increasingly tedious as soon as we try to create\nmultiple containers that need to interact with one another. Would it not be nice if we also had\nsome kind of universal format that could allow us to specify which containers we want, how they\ncommunicate over the network or share data?"]}),"\n",(0,r.jsxs)(o.p,{children:["This is where Docker Compose comes into play. It allows a user to write a specification file for\nan environment. That specification file is then run by using the ",(0,r.jsx)(o.code,{children:"docker compose"})," command and\nDocker takes care of creating all of the required resources."]}),"\n",(0,r.jsx)(o.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(o.p,{children:"On Windows and MacOS, Docker Compose is part of the installation bundle for Docker Desktop. On,\nLinux, you can check if you have Docker Compose installed by using the command:"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"\ncristian@cristianson:~$ docker compose version\nDocker Compose version v2.24.5\n\n"})}),"\n",(0,r.jsxs)(o.p,{children:["If the command fails, you can follow ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/install/",children:"this guide"})," to\ninstall Docker Compose."]}),"\n",(0,r.jsx)(o.h2,{id:"yaml-file-format",children:"YAML file format"}),"\n",(0,r.jsxs)(o.p,{children:["The file format we are going to use write Docker Compose files is called\n",(0,r.jsx)(o.a,{href:"https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html",children:"YAML"})," (Yet Another\nMarkup Language). The format assumes the following concepts:"]}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:["each entry is of type ",(0,r.jsx)(o.code,{children:"key:value"})]}),"\n",(0,r.jsx)(o.li,{children:"indentations in YAML are important as indented paragraphs are children of previous paragraphs"}),"\n",(0,r.jsxs)(o.li,{children:["list items are marked with ",(0,r.jsx)(o.code,{children:"-"})]}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"docker-compose-example-file",children:"Docker Compose example file"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-yaml",children:'\nversion: "3.8"\nservices:\n    api:\n        build: . # use a Dockerfile located in the current directory to build the image\n        environment: # set some environment variables that will be available in the container at runtime\n            NODE_ENV: development\n            MY_ENV_VAR: my_custom_value\n        ports:\n            - "HOST_PORT:CONTAINER_PORT"\n            - "5000:80" # bind the 5000 port on the host machine to the port 80 inside the container \n        networks:\n            - my-network # the container will be assigned to this network and will be able to\n                         # communicate only with containers which are part of the same network\n\n    postgres:\n        image: postgres:12 # use the official postgres image, version 12\n        secrets: # the secret which is created at the bottom of the file is referenced here\n            - my_ultra_secret_password\n        environment:\n            PGPASSWORD_FILE: /run/secrets/my_ultra_secret_password\n        volumes:\n            - my-volume:/var/lib/postgresql/data\n            - ./init-script/init-db.sql:/docker-entrypoint-init.d/init-db.sql\n        networks:\n            - my-network\n\nvolumes:\n    my-volume:\n\nnetworks:\n    my-network:\n\nsecrets:\n    my_ultra_secret_password:\n        file: \'./who-stores-passwords-in-plain-text.txt\'\n\n'})}),"\n",(0,r.jsxs)(o.p,{children:["The inspiration for this Docker Compose file is from ",(0,r.jsx)(o.a,{href:"https://mobylab.docs.crescdi.pub.ro/docs/softwareDevelopment/laboratory2/compose#exemplu-de-fi%C8%99ier-docker-compose",children:"here"}),"."]}),"\n",(0,r.jsx)(o.p,{children:"Let's break it down line by line:"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"version"}),": the set of Docker Compose functionalities that will be used. This is the first line of\neach compose file and is ",(0,r.jsx)(o.strong,{children:"mandatory"}),". Omitting this line will result in an error."]}),"\n"]}),"\n",(0,r.jsxs)(o.li,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"services"}),": the containers that will run after the configuration is loaded by the Compose agent.\nEach service is basically a container. In the provided file, we have two services/containers, called\n",(0,r.jsx)(o.strong,{children:"api"})," and ",(0,r.jsx)(o.strong,{children:"postgres"})]}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"build"}),": the directory where the Dockerfile used for creating the container image is located"]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"image"}),": the image used for running the container"]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"ports"}),": a list of ",(0,r.jsx)(o.code,{children:"HOST_MACHINE_PORT: CONTAINER_PORT"})," entries"]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"volumes"}),": a list of ",(0,r.jsx)(o.code,{children:"HOST_VOLUME: PATH_IN_CONTAINER"})," entries, where ",(0,r.jsx)(o.code,{children:"HOST_VOLUME"})," can be either\na Docker managed volume or a bind mount"]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"networks"}),": a list of assigned networks for the container."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"secrets"}),": a list of secrets used inside the container"]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.code,{children:"environment"}),": object with multiple fields of type ",(0,r.jsx)(o.code,{children:"ENV_VARIABLE_NAME: ENV_VARIABLE_VALUE"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(o.admonition,{type:"warning",children:(0,r.jsxs)(o.p,{children:["The ",(0,r.jsx)(o.code,{children:"build"})," and ",(0,r.jsx)(o.code,{children:"image"})," properties are mutually exclusive!"]})}),"\n",(0,r.jsx)(o.h3,{id:"volumes",children:"Volumes"}),"\n",(0,r.jsxs)(o.p,{children:["Top level property (written of the same level as ",(0,r.jsx)(o.code,{children:"services"}),"). These are Docker managed objects, and\ncan have multiple properties, such as the storage driver that should be used or if the volume already\nexists on the host machine. More information on volumes ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/compose-file/07-volumes/",children:"here"}),"."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-yaml",children:"\nvolumes:\n  db-data:\n    driver: foobar\n    external: false\n\n"})}),"\n",(0,r.jsx)(o.h3,{id:"networks",children:"Networks"}),"\n",(0,r.jsxs)(o.p,{children:["Top level property (written of the same level as ",(0,r.jsx)(o.code,{children:"services"}),"). These are Docker managed objects, and\ncan have multiple properties, such as the driver that should be used of if the network already exists\non the host machine. More information on networks ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/compose-file/06-networks/",children:"here"}),"."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-yaml",children:"\nnetworks:\n  db-data:\n    driver: bridge\n    external: false\n\n"})}),"\n",(0,r.jsx)(o.h3,{id:"secrets",children:"Secrets"}),"\n",(0,r.jsxs)(o.p,{children:["Top level property (written of the same level as ",(0,r.jsx)(o.code,{children:"services"}),"). These are Docker managed objects, and\ncan have multiple properties. These are a flavor of ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/compose-file/08-configs/",children:"Configs"}),",\nfocusing on hiding sensitive data. More information on secrets ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/compose-file/09-secrets/",children:"here"}),"."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-yaml",children:"\nsecrets:\n  server-certificate:\n    file: ./server.cert\n\n"})}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"server-certificate"})," secret is created as ",(0,r.jsx)(o.code,{children:"<project_name>_server-certificate"})," when the application\nis deployed, by registering content of the ",(0,r.jsx)(o.code,{children:"server.cert"})," as a platform secret."]}),"\n",(0,r.jsx)(o.h2,{id:"list-of-docker-compose-commands",children:"List of Docker Compose commands"}),"\n",(0,r.jsxs)(o.p,{children:["A list with all of the important Docker Compose commands is ",(0,r.jsx)(o.a,{href:"https://docs.docker.com/compose/reference/",children:"here"}),".\nThe instructor will perform a demo to showcase the most important ones, but when you do not know\nthe meaning of a command, do ",(0,r.jsx)(o.code,{children:"docker compose --help"}),"."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"\ndocker compose up -d                       # services run in the background, detached from the terminal that initialized them\ndocker compose up --build                  # creates images before starting\ndocker compose start                       # starts the containers\ndocker compose pause                       # pauses the containers of a service (SIGPAUSE is sent)\ndocker compose unpause                     # unpauses the containers\ndocker compose ps                          # lists active containers\ndocker compose ls                          # lists all container stacks\ndocker compose -p my-project -f my-docker-compose.yml up # uses the specified Compose file instead of the default one and with a project name\ndocker compose down                        # stops the containers and deletes them, along with networks, volumes, and images created at up\ndocker compose rm                          # deletes all stopped containers (you can specify the name of the container to be deleted at the end)\ndocker compose rm -s -v                    # with -s it stops all containers and with -v it also deletes the attached anonymous volumes\n\n"})}),"\n",(0,r.jsx)(o.h2,{id:"exercise-final-boss",children:"Exercise (final boss)"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:["Inspect the source code in ",(0,r.jsx)(o.a,{href:"https://github.com/IPW-CloudOps/simple-node-app",children:"this repository"})," and\ncreate a Docker Compose manifest file for that application."]}),"\n",(0,r.jsx)(o.li,{children:"Check that the required services are up and running."}),"\n",(0,r.jsx)(o.li,{children:"Do some requests to test the service."}),"\n",(0,r.jsx)(o.li,{children:"Delete the stack"}),"\n"]}),"\n",(0,r.jsx)(o.admonition,{type:"tip",children:(0,r.jsx)(o.p,{children:"If you have solved the last exercise in the Docker Basics section, then you should already have the\nDockerfile created. Just reference it in the Docker Compose manifest!"})}),"\n",(0,r.jsx)(o.admonition,{type:"info",children:(0,r.jsx)(o.p,{children:"This task is intentionally written ambiguous in order to make you search the official documentation,\nask the course instructors questions and familiarize yourself with what a DevOps engineer has to do\non a day-to-day basis. So do not feel bad if, at first, the task seems hard. Do your best, solve it\nat your own pace, collaborate with your colleagues, and, most importantly, have fun while learning\nnew things!"})}),"\n",(0,r.jsxs)(o.admonition,{type:"note",children:[(0,r.jsx)(o.p,{children:"This course borrows many things, as well as its structure from:"}),(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"https://scgc.pages.upb.ro/cloud-courses/docs/security/containers",children:"SCGC Pages UPB"})}),"\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.a,{href:"https://mobylab.docs.crescdi.pub.ro/docs/softwareDevelopment/laboratory1/",children:"Mobylab Pages UPB"})}),"\n"]}),(0,r.jsx)(o.p,{children:"This note is here then to give credits to the teams that created the above resources. For more\ninformation on Docker and other things, feel free to check them out!"})]})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,o,s)=>{s.d(o,{R:()=>i,x:()=>c});var n=s(6540);const r={},t=n.createContext(r);function i(e){const o=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);