"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[1202],{28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>o});var t=r(96540);const c={},n=t.createContext(c);function i(e){const s=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(n.Provider,{value:s},e.children)}},72642:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"cloud_operations/kubernetes/resources/service/service-spec","title":"Service Spec","description":"","source":"@site/docs/cloud_operations/kubernetes/resources/service/service-spec.md","sourceDirName":"cloud_operations/kubernetes/resources/service","slug":"/cloud_operations/kubernetes/resources/service/service-spec","permalink":"/docs/cloud_operations/kubernetes/resources/service/service-spec","draft":false,"unlisted":true,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/cloud_operations/kubernetes/resources/service/service-spec.md","tags":[],"version":"current","frontMatter":{"title":"Service Spec","description":"","unlisted":true},"sidebar":"tutorialSidebar"}');var c=r(74848),n=r(28453);const i={title:"Service Spec",description:"",unlisted:!0},o="Service Spec",l={},d=[];function u(e){const s={a:"a",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.header,{children:(0,c.jsx)(s.h1,{id:"service-spec",children:(0,c.jsx)(s.a,{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#servicespec-v1-core",children:"Service Spec"})})}),"\n",(0,c.jsx)(s.p,{children:"Here's the most important attributes:"}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["ports - ",(0,c.jsx)(s.a,{href:"/docs/cloud_operations/kubernetes/resources/service/service-port",children:(0,c.jsx)(s.code,{children:"Array<ServicePort>"})})]}),"\n",(0,c.jsxs)(s.li,{children:["selector - ",(0,c.jsx)(s.code,{children:"Object"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsx)(s.li,{children:"Route service traffic to pods with label keys and values matching this selector"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["type - [",(0,c.jsx)(s.code,{children:'"ExternalName" | "ClusterIP" | "NodePort" | "LoadBalancer"'})," - ",(0,c.jsx)(s.code,{children:"string"}),"]","\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsx)(s.li,{children:"determines how the Service is exposed"}),"\n",(0,c.jsxs)(s.li,{children:["defaults to ",(0,c.jsx)(s.code,{children:"ClusterIP"})," - which allocates a cluster-internal IP address for load-balancing to endpoints"]}),"\n",(0,c.jsx)(s.li,{children:"endpoints are determined by the selector"}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}}}]);