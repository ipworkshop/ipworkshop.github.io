"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[2973],{28453:(n,e,o)=>{o.d(e,{R:()=>a,x:()=>s});var l=o(96540);const t={},i=l.createContext(t);function a(n){const e=l.useContext(i);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),l.createElement(i.Provider,{value:e},n.children)}},62459:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"desktop_applications/Slint/Globals","title":"Globals in Slint","description":"Introduction","source":"@site/docs/desktop_applications/03_Slint/07_Globals.md","sourceDirName":"desktop_applications/03_Slint","slug":"/desktop_applications/Slint/Globals","permalink":"/docs/desktop_applications/Slint/Globals","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/desktop_applications/03_Slint/07_Globals.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Positioning and Layouts in Slint","permalink":"/docs/desktop_applications/Slint/Layouts"},"next":{"title":"Repetition in Slint","permalink":"/docs/desktop_applications/Slint/Repetition"}}');var t=o(74848),i=o(28453);const a={},s="Globals in Slint",r={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Example: Global Color Palette",id:"example-global-color-palette",level:2},{value:"Exporting Globals",id:"exporting-globals",level:2},{value:"Rust Example: Accessing a Global",id:"rust-example-accessing-a-global",level:2},{value:"Re-Exposing Globals in Components",id:"re-exposing-globals-in-components",level:2}];function p(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"globals-in-slint",children:"Globals in Slint"})}),"\n",(0,t.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Globals"})," are singletons that hold properties or callbacks accessible throughout the entire project.",(0,t.jsx)(e.br,{}),"\n","Declare them using:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-slint",children:"global Name {\n    /* properties or callbacks */\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"Access global properties or callbacks via:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Name.property\nName.callback()\n"})}),"\n",(0,t.jsx)(e.h2,{id:"example-global-color-palette",children:"Example: Global Color Palette"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-slint",children:"global Palette  {\n    in-out property<color> primary: blue;\n    in-out property<color> secondary: green;\n}\n\nexport component Example inherits Rectangle {\n    background: Palette.primary;\n    border-color: Palette.secondary;\n    border-width: 2px;\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"exporting-globals",children:"Exporting Globals"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Use ",(0,t.jsx)(e.code,{children:"export global"})," to make a global available to other ",(0,t.jsx)(e.code,{children:".slint"})," files."]}),"\n",(0,t.jsxs)(e.li,{children:["To make a global visible to ",(0,t.jsx)(e.strong,{children:"native code"})," (Rust, C++, NodeJS, Python), re-export it from the file that exports your main application component."]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Example:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-slint",children:"export global Logic  {\n    in-out property <int> the-value;\n    pure callback magic-operation(int) -> int;\n}\n\n// Main application component\nexport component App inherits Window {\n    // ...\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"rust-example-accessing-a-global",children:"Rust Example: Accessing a Global"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:'slint::slint!{\nexport global Logic {\n    in-out property <int> the-value;\n    pure callback magic-operation(int) -> int;\n}\n\nexport component App inherits Window {\n    // ...\n}\n}\n\nfn main() {\n    let app = App::new();\n    app.global::<Logic>().on_magic_operation(|value| {\n        eprintln!("magic operation input: {}", value);\n        value * 2\n    });\n    app.global::<Logic>().set_the_value(42);\n    // ...\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"re-exposing-globals-in-components",children:"Re-Exposing Globals in Components"}),"\n",(0,t.jsxs)(e.p,{children:["You can re-expose properties or callbacks from a global using ",(0,t.jsx)(e.strong,{children:"two-way bindings"})," (",(0,t.jsx)(e.code,{children:"<=>"}),")."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-slint",children:'global Logic  {\n    in-out property <int> the-value;\n    pure callback magic-operation(int) -> int;\n}\n\ncomponent SomeComponent inherits Text {\n    text: "The magic value is:" + Logic.magic-operation(42);\n}\n\nexport component MainWindow inherits Window {\n    in-out property the-value <=> Logic.the-value;\n    pure callback magic-operation <=> Logic.magic-operation;\n\n    SomeComponent {}\n}\n'})}),"\n",(0,t.jsxs)(e.p,{children:["This allows ",(0,t.jsx)(e.strong,{children:"native code"})," to access or modify global values through your component."]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}}}]);