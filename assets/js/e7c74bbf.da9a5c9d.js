"use strict";(self.webpackChunkcourses=self.webpackChunkcourses||[]).push([[8191],{5689:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cloud_operations/kubernetes/resources/persistent-volumes","title":"Persistent Volumes","description":"","source":"@site/docs/cloud_operations/kubernetes/resources/persistent-volumes.md","sourceDirName":"cloud_operations/kubernetes/resources","slug":"/cloud_operations/kubernetes/resources/persistent-volumes","permalink":"/docs/cloud_operations/kubernetes/resources/persistent-volumes","draft":false,"unlisted":false,"editUrl":"https://github.com/ipworkshop/ipworkshop.github.io/edit/main/docs/cloud_operations/kubernetes/resources/persistent-volumes.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Persistent Volumes","description":"","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"ReplicaSets","permalink":"/docs/cloud_operations/kubernetes/resources/replicasets"},"next":{"title":"StatefulSets","permalink":"/docs/cloud_operations/kubernetes/resources/statefulsets"}}');var i=n(4848),r=n(8453);const l={title:"Persistent Volumes",description:"",sidebar_position:7},o="Persistent Volumes",a={},c=[{value:"Goals",id:"goals",level:2},{value:"Understanding Kubernetes Persistent Volumes",id:"understanding-kubernetes-persistent-volumes",level:2},{value:"Basic Persistent Volume Example",id:"basic-persistent-volume-example",level:2},{value:"Simple Persistent Volume and Persistent Volume Claim",id:"simple-persistent-volume-and-persistent-volume-claim",level:3},{value:"Persistent Volume Spec Explanation",id:"persistent-volume-spec-explanation",level:2},{value:"Persistent Volume Claims",id:"persistent-volume-claims",level:2},{value:"Exercises",id:"exercises",level:2},{value:"Exercise 1: Create a Simple Persistent Volume",id:"exercise-1-create-a-simple-persistent-volume",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"persistent-volumes",children:(0,i.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/",children:"Persistent Volumes"})})}),"\n",(0,i.jsx)(s.h2,{id:"goals",children:"Goals"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Understand Kubernetes Persistent Volumes"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Learn what a Persistent Volume (PV) is and its role in Kubernetes storage architecture."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Basic Example(s)"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Provide (a) basic example(s) of Persistent Volume and Persistent Volume Claim (PVC) resources."}),"\n",(0,i.jsx)(s.li,{children:"Show how to define a PV and PVC using YAML."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Persistent Volume Spec Explanation"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Explain the components of the Persistent Volume specification using the example(s) above."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Persistent Volume Claims"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Describe the relationship between Persistent Volumes and Persistent Volume Claims."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Exercise"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Hands-on activity to create and use a Persistent Volume."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"understanding-kubernetes-persistent-volumes",children:"Understanding Kubernetes Persistent Volumes"}),"\n",(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.strong,{children:"Persistent Volume"})," (PV) in Kubernetes is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using Storage Classes. PVs are independent of the lifecycle of a pod and provide a way to persist data beyond the lifespan of individual pods."]}),"\n",(0,i.jsx)(s.h2,{id:"basic-persistent-volume-example",children:"Basic Persistent Volume Example"}),"\n",(0,i.jsx)(s.h3,{id:"simple-persistent-volume-and-persistent-volume-claim",children:"Simple Persistent Volume and Persistent Volume Claim"}),"\n",(0,i.jsx)(s.p,{children:"Here is a basic example of a Kubernetes Persistent Volume and Persistent Volume Claim in YAML:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: example-pv\nspec:\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: manual\n  hostPath:\n    path: /mnt/data\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: example-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n  storageClassName: manual\n"})}),"\n",(0,i.jsx)(s.p,{children:"This example defines a 1Gi PV using a hostPath and a PVC requesting 1Gi of storage."}),"\n",(0,i.jsxs)(s.p,{children:["Save this to a file ",(0,i.jsx)(s.code,{children:"pv-pvc.yaml"})," and create the resources using:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sh",children:"> kubectl apply -f pv-pvc.yaml\npersistentvolume/example-pv created\npersistentvolumeclaim/example-pvc created\n"})}),"\n",(0,i.jsx)(s.h2,{id:"persistent-volume-spec-explanation",children:"Persistent Volume Spec Explanation"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"apiVersion"}),": v1 (API group and version)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"kind"}),": PersistentVolume (type of the resource)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"metadata"}),": ",(0,i.jsx)(s.a,{href:"/docs/cloud_operations/kubernetes/resources/object-meta",children:"ObjectMeta"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"spec"}),": ",(0,i.jsx)(s.a,{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#persistentvolumespec-v1-core",children:"PersistentVolumeSpec"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"status"}),": ",(0,i.jsx)(s.a,{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#persistentvolumestatus-v1-core",children:"PersistentVolumeStatus"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"persistent-volume-claims",children:"Persistent Volume Claims"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["A ",(0,i.jsx)(s.strong,{children:"Persistent Volume Claim (PVC)"})," is a request for storage by a user. It is similar to a pod in that pods consume node resources, and PVCs consume PV resources."]}),"\n",(0,i.jsx)(s.li,{children:"PVCs can request specific size and access modes (e.g., ReadWriteOnce, ReadOnlyMany)."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"exercises",children:"Exercises"}),"\n",(0,i.jsx)(s.h3,{id:"exercise-1-create-a-simple-persistent-volume",children:"Exercise 1: Create a Simple Persistent Volume"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Objective"}),": Deploy an application that uses a Persistent Volume for storage."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Task"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Define a Persistent Volume with a suitable storage capacity."}),"\n",(0,i.jsx)(s.li,{children:"Create a Persistent Volume Claim to request storage."}),"\n",(0,i.jsx)(s.li,{children:"Deploy a pod that uses the PVC for persistent storage."}),"\n",(0,i.jsx)(s.li,{children:"Verify that the pod can write and read data from the Persistent Volume."}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsx)(s.p,{children:"Make sure your cluster has a storage provider configured. For local testing, using a hostPath as shown in the example above is a simple way to simulate PV functionality."})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(6540);const i={},r=t.createContext(i);function l(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);